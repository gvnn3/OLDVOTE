;; Macintosh HD:lisp:qbc:data:option;; Items for Database: OPTION(defvar OPTION1652)(prog1 (setf OPTION1652 (make-instance 'OPTION))(setf (slot-value OPTION1652 'NAME)  "Pasta") (setf (slot-value OPTION1652 'IMPORTANCE)  'C) (setf (slot-value OPTION1652 'DATA)  (list (init-datum '(CALORIES 500 OPTION1636 OPTION)))) (setf (slot-value OPTION1652 'STATUS)  "Active") (setf (slot-value OPTION1652 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value OPTION1652 'SYMBOL)  'OPTION1652) )(insert-item OPTION OPTION1652)(defvar OPTION1620)(prog1 (setf OPTION1620 (make-instance 'OPTION))(setf (slot-value OPTION1620 'NAME)  "Salad") (setf (slot-value OPTION1620 'IMPORTANCE)  'C) (setf (slot-value OPTION1620 'DATA)  (list (init-datum '(CALORIES 100 OPTION1604 OPTION)))) (setf (slot-value OPTION1620 'STATUS)  "Active") (setf (slot-value OPTION1620 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value OPTION1620 'SYMBOL)  'OPTION1620) )(insert-item OPTION OPTION1620)(defvar OPTION1706)(prog1 (setf OPTION1706 (make-instance 'OPTION))(setf (slot-value OPTION1706 'NAME)  "bank1") (setf (slot-value OPTION1706 'IMPORTANCE)  'C) (setf (slot-value OPTION1706 'DATA)  (list (init-datum '(ROA 1.5 OPTION1690 OPTION)))) (setf (slot-value OPTION1706 'STATUS)  "Active") (setf (slot-value OPTION1706 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value OPTION1706 'SYMBOL)  'OPTION1706) )(insert-item OPTION OPTION1706)(defvar OPTION1738)(prog1 (setf OPTION1738 (make-instance 'OPTION))(setf (slot-value OPTION1738 'NAME)  "bank2") (setf (slot-value OPTION1738 'IMPORTANCE)  'C) (setf (slot-value OPTION1738 'DATA)  (list (init-datum '(ROA 0.4 OPTION1722 OPTION)))) (setf (slot-value OPTION1738 'STATUS)  "Active") (setf (slot-value OPTION1738 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value OPTION1738 'SYMBOL)  'OPTION1738) )(insert-item OPTION OPTION1738)(defvar OPTION118)(prog1 (setf OPTION118 (make-instance 'OPTION))(setf (slot-value OPTION118 'NAME)  "credit1") (setf (slot-value OPTION118 'DATA)  (list (init-datum '(ASSETS 100 OPTION117 OPTION))(init-datum '(CASH-POSITION 100 OPTION117 OPTION))(init-datum '(DEBT/EQUITY 1 OPTION117 OPTION))(init-datum '(PROFITS-GROWTH-RATE 1 OPTION117 OPTION))(init-datum '(SHORT-TERM-DEBT 100 OPTION117 OPTION))(init-datum '(LONG-TERM-DEBT 100 OPTION117 OPTION)))) (setf (slot-value OPTION118 'STATUS)  "Active") (setf (slot-value OPTION118 'DATE-OPEN) (list->date '(6 1 1996))) (setf (slot-value OPTION118 'SYMBOL)  'OPTION118) )(insert-item OPTION OPTION118)(defvar OPTION126)(prog1 (setf OPTION126 (make-instance 'OPTION))(setf (slot-value OPTION126 'NAME)  "credit2") (setf (slot-value OPTION126 'DATA)  (list (init-datum '(ASSETS 200 OPTION125 OPTION))(init-datum '(CASH-POSITION 200 OPTION125 OPTION))(init-datum '(DEBT/EQUITY 1 OPTION125 OPTION))(init-datum '(PROFITS-GROWTH-RATE 2 OPTION125 OPTION))(init-datum '(SHORT-TERM-DEBT 200 OPTION125 OPTION))(init-datum '(LONG-TERM-DEBT 200 OPTION125 OPTION)))) (setf (slot-value OPTION126 'STATUS)  "Active") (setf (slot-value OPTION126 'DATE-OPEN) (list->date '(6 1 1996))) (setf (slot-value OPTION126 'SYMBOL)  'OPTION126) )(insert-item OPTION OPTION126)