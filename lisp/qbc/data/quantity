;; Macintosh HD:lisp:qbc:data:quantity;; list of command aliases.(SETF (db-aliases QUANTITY)  (list  (list  'HC 'HEAD 'CURRENT)));; Items for Database: QUANTITY(defvar QUANTITY1031)(prog1 (setf QUANTITY1031 (make-instance 'QUANTITY))(setf (slot-value QUANTITY1031 'NAME)  "Accounts Payable") (setf (slot-value QUANTITY1031 'SYNONYMS)  (list  'AP)) (setf (slot-value QUANTITY1031 'IMPORTANCE)  'C) (setf (slot-value QUANTITY1031 'NORM)  'LOW) (setf (slot-value QUANTITY1031 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY1031 'STATUS)  "Active") (setf (slot-value QUANTITY1031 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY1031 'SYMBOL)  'QUANTITY1031) )(insert-item QUANTITY QUANTITY1031)(defvar QUANTITY1056)(prog1 (setf QUANTITY1056 (make-instance 'QUANTITY))(setf (slot-value QUANTITY1056 'NAME)  "Accounts Receivable") (setf (slot-value QUANTITY1056 'SYNONYMS)  (list  'AR)) (setf (slot-value QUANTITY1056 'IMPORTANCE)  'C) (setf (slot-value QUANTITY1056 'NORM)  'HIGH) (setf (slot-value QUANTITY1056 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY1056 'STATUS)  "Active") (setf (slot-value QUANTITY1056 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY1056 'SYMBOL)  'QUANTITY1056) )(insert-item QUANTITY QUANTITY1056)(defvar QUANTITY884)(prog1 (setf QUANTITY884 (make-instance 'QUANTITY))(setf (slot-value QUANTITY884 'NAME)  "Age") (setf (slot-value QUANTITY884 'IMPORTANCE)  'B) (setf (slot-value QUANTITY884 'NORM)  'LOW) (setf (slot-value QUANTITY884 'DIMENSION)  (list  'YEARS)) (setf (slot-value QUANTITY884 'STATUS)  "Active") (setf (slot-value QUANTITY884 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY884 'SYMBOL)  'QUANTITY884) )(insert-item QUANTITY QUANTITY884)(defvar QUANTITY1564)(prog1 (setf QUANTITY1564 (make-instance 'QUANTITY))(setf (slot-value QUANTITY1564 'NAME)  "Assets") (setf (slot-value QUANTITY1564 'IMPORTANCE)  'B) (setf (slot-value QUANTITY1564 'NORM)  'HIGH) (setf (slot-value QUANTITY1564 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY1564 'STATUS)  "Active") (setf (slot-value QUANTITY1564 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY1564 'SYMBOL)  'QUANTITY1564) )(insert-item QUANTITY QUANTITY1564)(defvar QUANTITY729)(prog1 (setf QUANTITY729 (make-instance 'QUANTITY))(setf (slot-value QUANTITY729 'NAME)  "Calories") (setf (slot-value QUANTITY729 'IMPORTANCE)  'B) (setf (slot-value QUANTITY729 'NORM)  'LOW) (setf (slot-value QUANTITY729 'STATUS)  "Active") (setf (slot-value QUANTITY729 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY729 'SYMBOL)  'QUANTITY729) )(insert-item QUANTITY QUANTITY729)(defvar QUANTITY96)(prog1 (setf QUANTITY96 (make-instance 'QUANTITY))(setf (slot-value QUANTITY96 'NAME)  "Cash-Position") (setf (slot-value QUANTITY96 'IMPORTANCE)  'B) (setf (slot-value QUANTITY96 'NORM)  'HIGH) (setf (slot-value QUANTITY96 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY96 'STATUS)  "Active") (setf (slot-value QUANTITY96 'DATE-OPEN) (list->date '(6 1 1996))) (setf (slot-value QUANTITY96 'SYMBOL)  'QUANTITY96) )(insert-item QUANTITY QUANTITY96)(defvar QUANTITY754)(prog1 (setf QUANTITY754 (make-instance 'QUANTITY))(setf (slot-value QUANTITY754 'NAME)  "Cholesterol") (setf (slot-value QUANTITY754 'IMPORTANCE)  'C) (setf (slot-value QUANTITY754 'NORM)  'LOW) (setf (slot-value QUANTITY754 'STATUS)  "Active") (setf (slot-value QUANTITY754 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY754 'SYMBOL)  'QUANTITY754) )(insert-item QUANTITY QUANTITY754)(defvar QUANTITY826)(prog1 (setf QUANTITY826 (make-instance 'QUANTITY))(setf (slot-value QUANTITY826 'NAME)  "Cost of Goods Sold") (setf (slot-value QUANTITY826 'SYNONYMS)  (list  'COGS)) (setf (slot-value QUANTITY826 'IMPORTANCE)  'B) (setf (slot-value QUANTITY826 'NORM)  'LOW) (setf (slot-value QUANTITY826 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY826 'STATUS)  "Active") (setf (slot-value QUANTITY826 'DATE-OPEN) (list->date '(8 17 1994))) (setf (slot-value QUANTITY826 'SYMBOL)  'QUANTITY826) )(insert-item QUANTITY QUANTITY826)(defvar QUANTITY97)(prog1 (setf QUANTITY97 (make-instance 'QUANTITY))(setf (slot-value QUANTITY97 'NAME)  "Debt") (setf (slot-value QUANTITY97 'IMPORTANCE)  'B) (setf (slot-value QUANTITY97 'NORM)  'LOW) (setf (slot-value QUANTITY97 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY97 'STATUS)  "Active") (setf (slot-value QUANTITY97 'DATE-OPEN) (list->date '(6 1 1996))) (setf (slot-value QUANTITY97 'SYMBOL)  'QUANTITY97) )(insert-item QUANTITY QUANTITY97)(defvar QUANTITY98)(prog1 (setf QUANTITY98 (make-instance 'QUANTITY))(setf (slot-value QUANTITY98 'NAME)  "Debt/Equity") (setf (slot-value QUANTITY98 'IMPORTANCE)  'B) (setf (slot-value QUANTITY98 'FORMULA)  (list  'DEBT '/ 'EQUITY)) (setf (slot-value QUANTITY98 'STATUS)  "Active") (setf (slot-value QUANTITY98 'DATE-OPEN) (list->date '(6 1 1996))) (setf (slot-value QUANTITY98 'SYMBOL)  'QUANTITY98) )(insert-item QUANTITY QUANTITY98)(defvar QUANTITY743)(prog1 (setf QUANTITY743 (make-instance 'QUANTITY))(setf (slot-value QUANTITY743 'NAME)  "Earnings per Share") (setf (slot-value QUANTITY743 'SYNONYMS)  (list  'EPS 'EARNINGS-PER-SHARE)) (setf (slot-value QUANTITY743 'IMPORTANCE)  'A) (setf (slot-value QUANTITY743 'NORM)  'HIGH) (setf (slot-value QUANTITY743 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY743 'FORMULA)  (list  'EARNINGS '/ 'SHARES)) (setf (slot-value QUANTITY743 'STATUS)  "Active") (setf (slot-value QUANTITY743 'DATE-OPEN) (list->date '(8 18 1994))) (setf (slot-value QUANTITY743 'SYMBOL)  'QUANTITY743) )(insert-item QUANTITY QUANTITY743)(defvar QUANTITY895)(prog1 (setf QUANTITY895 (make-instance 'QUANTITY))(setf (slot-value QUANTITY895 'NAME)  "Equity") (setf (slot-value QUANTITY895 'IMPORTANCE)  'B) (setf (slot-value QUANTITY895 'FORMULA)  (list  'ASSETS '- 'LIABILITIES)) (setf (slot-value QUANTITY895 'STATUS)  "Active") (setf (slot-value QUANTITY895 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY895 'SYMBOL)  'QUANTITY895) )(insert-item QUANTITY QUANTITY895)(defvar QUANTITY785)(prog1 (setf QUANTITY785 (make-instance 'QUANTITY))(setf (slot-value QUANTITY785 'NAME)  "Expenses") (setf (slot-value QUANTITY785 'IMPORTANCE)  'A) (setf (slot-value QUANTITY785 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY785 'FORMULA)  (list  'OVERHEAD '+ 'COGS)) (setf (slot-value QUANTITY785 'STATUS)  "Active") (setf (slot-value QUANTITY785 'DATE-OPEN) (list->date '(8 18 1994))) (setf (slot-value QUANTITY785 'SYMBOL)  'QUANTITY785) )(insert-item QUANTITY QUANTITY785)(defvar QUANTITY779)(prog1 (setf QUANTITY779 (make-instance 'QUANTITY))(setf (slot-value QUANTITY779 'NAME)  "Fat") (setf (slot-value QUANTITY779 'IMPORTANCE)  'B) (setf (slot-value QUANTITY779 'NORM)  'LOW) (setf (slot-value QUANTITY779 'STATUS)  "Active") (setf (slot-value QUANTITY779 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY779 'SYMBOL)  'QUANTITY779) )(insert-item QUANTITY QUANTITY779)(defvar QUANTITY829)(prog1 (setf QUANTITY829 (make-instance 'QUANTITY))(setf (slot-value QUANTITY829 'NAME)  "Fiber") (setf (slot-value QUANTITY829 'IMPORTANCE)  'C) (setf (slot-value QUANTITY829 'NORM)  'HIGH) (setf (slot-value QUANTITY829 'STATUS)  "Active") (setf (slot-value QUANTITY829 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY829 'SYMBOL)  'QUANTITY829) )(insert-item QUANTITY QUANTITY829)(defvar QUANTITY1077)(prog1 (setf QUANTITY1077 (make-instance 'QUANTITY))(setf (slot-value QUANTITY1077 'NAME)  "Gallon") (setf (slot-value QUANTITY1077 'IMPORTANCE)  'C) (setf (slot-value QUANTITY1077 'NORM)  'LOW) (setf (slot-value QUANTITY1077 'DIMENSION)  (list  'VOLUME)) (setf (slot-value QUANTITY1077 'STATUS)  "Active") (setf (slot-value QUANTITY1077 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY1077 'SYMBOL)  'QUANTITY1077) )(insert-item QUANTITY QUANTITY1077)(defvar QUANTITY909)(prog1 (setf QUANTITY909 (make-instance 'QUANTITY))(setf (slot-value QUANTITY909 'NAME)  "Hour") (setf (slot-value QUANTITY909 'IMPORTANCE)  'C) (setf (slot-value QUANTITY909 'DIMENSION)  (list  'TIME)) (setf (slot-value QUANTITY909 'STATUS)  "Active") (setf (slot-value QUANTITY909 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY909 'SYMBOL)  'QUANTITY909) )(insert-item QUANTITY QUANTITY909)(defvar QUANTITY920)(prog1 (setf QUANTITY920 (make-instance 'QUANTITY))(setf (slot-value QUANTITY920 'NAME)  "Liabilities") (setf (slot-value QUANTITY920 'IMPORTANCE)  'B) (setf (slot-value QUANTITY920 'NORM)  'LOW) (setf (slot-value QUANTITY920 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY920 'STATUS)  "Active") (setf (slot-value QUANTITY920 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY920 'SYMBOL)  'QUANTITY920) )(insert-item QUANTITY QUANTITY920)(defvar QUANTITY1006)(prog1 (setf QUANTITY1006 (make-instance 'QUANTITY))(setf (slot-value QUANTITY1006 'NAME)  "Loans") (setf (slot-value QUANTITY1006 'IMPORTANCE)  'C) (setf (slot-value QUANTITY1006 'NORM)  'HIGH) (setf (slot-value QUANTITY1006 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY1006 'STATUS)  "Active") (setf (slot-value QUANTITY1006 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY1006 'SYMBOL)  'QUANTITY1006) )(insert-item QUANTITY QUANTITY1006)(defvar QUANTITY959)(prog1 (setf QUANTITY959 (make-instance 'QUANTITY))(setf (slot-value QUANTITY959 'NAME)  "Miles") (setf (slot-value QUANTITY959 'IMPORTANCE)  'B) (setf (slot-value QUANTITY959 'NORM)  'HIGH) (setf (slot-value QUANTITY959 'DIMENSION)  (list  'DISTANCE)) (setf (slot-value QUANTITY959 'STATUS)  "Active") (setf (slot-value QUANTITY959 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY959 'SYMBOL)  'QUANTITY959) )(insert-item QUANTITY QUANTITY959)(defvar QUANTITY1102)(prog1 (setf QUANTITY1102 (make-instance 'QUANTITY))(setf (slot-value QUANTITY1102 'NAME)  "Miles per gallon") (setf (slot-value QUANTITY1102 'SYNONYMS)  (list  'MPG)) (setf (slot-value QUANTITY1102 'IMPORTANCE)  'B) (setf (slot-value QUANTITY1102 'FORMULA)  (list  'MILES '/ 'GALLON)) (setf (slot-value QUANTITY1102 'STATUS)  "Active") (setf (slot-value QUANTITY1102 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY1102 'SYMBOL)  'QUANTITY1102) )(insert-item QUANTITY QUANTITY1102)(defvar QUANTITY1127)(prog1 (setf QUANTITY1127 (make-instance 'QUANTITY))(setf (slot-value QUANTITY1127 'NAME)  "Miles per hour") (setf (slot-value QUANTITY1127 'SYNONYMS)  (list  'MPH)) (setf (slot-value QUANTITY1127 'IMPORTANCE)  'B) (setf (slot-value QUANTITY1127 'DIMENSION)  (list  'SPEED)) (setf (slot-value QUANTITY1127 'FORMULA)  (list  'MILES '/ 'HOUR)) (setf (slot-value QUANTITY1127 'STATUS)  "Active") (setf (slot-value QUANTITY1127 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY1127 'SYMBOL)  'QUANTITY1127) )(insert-item QUANTITY QUANTITY1127)(defvar QUANTITY1151)(prog1 (setf QUANTITY1151 (make-instance 'QUANTITY))(setf (slot-value QUANTITY1151 'NAME)  "Non-performing Assets") (setf (slot-value QUANTITY1151 'SYNONYMS)  (list  'NPA)) (setf (slot-value QUANTITY1151 'IMPORTANCE)  'C) (setf (slot-value QUANTITY1151 'NORM)  'LOW) (setf (slot-value QUANTITY1151 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY1151 'STATUS)  "Active") (setf (slot-value QUANTITY1151 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY1151 'SYMBOL)  'QUANTITY1151) )(insert-item QUANTITY QUANTITY1151)(defvar QUANTITY693)(prog1 (setf QUANTITY693 (make-instance 'QUANTITY))(setf (slot-value QUANTITY693 'NAME)  "Outstanding Shares") (setf (slot-value QUANTITY693 'SYNONYMS)  (list  'SHARES 'OUTSTANDING-SHARES)) (setf (slot-value QUANTITY693 'IMPORTANCE)  'C) (setf (slot-value QUANTITY693 'STATUS)  "Active") (setf (slot-value QUANTITY693 'DATE-OPEN) (list->date '(8 18 1994))) (setf (slot-value QUANTITY693 'SYMBOL)  'QUANTITY693) )(insert-item QUANTITY QUANTITY693)(defvar QUANTITY801)(prog1 (setf QUANTITY801 (make-instance 'QUANTITY))(setf (slot-value QUANTITY801 'NAME)  "Overhead") (setf (slot-value QUANTITY801 'IMPORTANCE)  'B) (setf (slot-value QUANTITY801 'NORM)  'LOW) (setf (slot-value QUANTITY801 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY801 'STATUS)  "Active") (setf (slot-value QUANTITY801 'DATE-OPEN) (list->date '(8 17 1994))) (setf (slot-value QUANTITY801 'SYMBOL)  'QUANTITY801) )(insert-item QUANTITY QUANTITY801)(defvar QUANTITY619)(prog1 (setf QUANTITY619 (make-instance 'QUANTITY))(setf (slot-value QUANTITY619 'NAME)  "Price") (setf (slot-value QUANTITY619 'IMPORTANCE)  'A) (setf (slot-value QUANTITY619 'NORM)  'HIGH) (setf (slot-value QUANTITY619 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY619 'STATUS)  "Active") (setf (slot-value QUANTITY619 'DATE-OPEN) (list->date '(8 17 1994))) (setf (slot-value QUANTITY619 'SYMBOL)  'QUANTITY619) )(insert-item QUANTITY QUANTITY619)(defvar QUANTITY1036)(prog1 (setf QUANTITY1036 (make-instance 'QUANTITY))(setf (slot-value QUANTITY1036 'NAME)  "Price-to-earnings") (setf (slot-value QUANTITY1036 'SYNONYMS)  (list  'P-E)) (setf (slot-value QUANTITY1036 'IMPORTANCE)  'B) (setf (slot-value QUANTITY1036 'FORMULA)  (list  'PPS '/ 'EPS)) (setf (slot-value QUANTITY1036 'STATUS)  "Active") (setf (slot-value QUANTITY1036 'DATE-OPEN) (list->date '(8 17 1994))) (setf (slot-value QUANTITY1036 'SYMBOL)  'QUANTITY1036) )(insert-item QUANTITY QUANTITY1036)(defvar QUANTITY776)(prog1 (setf QUANTITY776 (make-instance 'QUANTITY))(setf (slot-value QUANTITY776 'NAME)  "Profit") (setf (slot-value QUANTITY776 'SYNONYMS)  (list  'EARNINGS)) (setf (slot-value QUANTITY776 'IMPORTANCE)  'A) (setf (slot-value QUANTITY776 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY776 'FORMULA)  (list  'REVENUE '- 'EXPENSES)) (setf (slot-value QUANTITY776 'STATUS)  "Active") (setf (slot-value QUANTITY776 'DATE-OPEN) (list->date '(8 17 1994))) (setf (slot-value QUANTITY776 'SYMBOL)  'QUANTITY776) )(insert-item QUANTITY QUANTITY776)(defvar QUANTITY100)(prog1 (setf QUANTITY100 (make-instance 'QUANTITY))(setf (slot-value QUANTITY100 'NAME)  "Profits-growth-rate") (setf (slot-value QUANTITY100 'IMPORTANCE)  'B) (setf (slot-value QUANTITY100 'STATUS)  "Active") (setf (slot-value QUANTITY100 'DATE-OPEN) (list->date '(6 1 1996))) (setf (slot-value QUANTITY100 'SYMBOL)  'QUANTITY100) )(insert-item QUANTITY QUANTITY100)(defvar QUANTITY81)(prog1 (setf QUANTITY81 (make-instance 'QUANTITY))(setf (slot-value QUANTITY81 'NAME)  "R&D-Expenses") (setf (slot-value QUANTITY81 'IMPORTANCE)  'B) (setf (slot-value QUANTITY81 'NORM)  'LOW) (setf (slot-value QUANTITY81 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY81 'STATUS)  "Active") (setf (slot-value QUANTITY81 'DATE-OPEN) (list->date '(6 1 1996))) (setf (slot-value QUANTITY81 'SYMBOL)  'QUANTITY81) )(insert-item QUANTITY QUANTITY81)(defvar QUANTITY1188)(prog1 (setf QUANTITY1188 (make-instance 'QUANTITY))(setf (slot-value QUANTITY1188 'NAME)  "Ratio1") (setf (slot-value QUANTITY1188 'IMPORTANCE)  'C) (setf (slot-value QUANTITY1188 'FORMULA)  (list  (list  'EQUITY '+ 'RESERVES) '/ (list  'LOANS '+ 'SLOC))) (setf (slot-value QUANTITY1188 'STATUS)  "Active") (setf (slot-value QUANTITY1188 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY1188 'SYMBOL)  'QUANTITY1188) )(insert-item QUANTITY QUANTITY1188)(defvar QUANTITY970)(prog1 (setf QUANTITY970 (make-instance 'QUANTITY))(setf (slot-value QUANTITY970 'NAME)  "Reserves") (setf (slot-value QUANTITY970 'IMPORTANCE)  'C) (setf (slot-value QUANTITY970 'NORM)  'LOW) (setf (slot-value QUANTITY970 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY970 'STATUS)  "Active") (setf (slot-value QUANTITY970 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY970 'SYMBOL)  'QUANTITY970) )(insert-item QUANTITY QUANTITY970)(defvar QUANTITY1663)(prog1 (setf QUANTITY1663 (make-instance 'QUANTITY))(setf (slot-value QUANTITY1663 'NAME)  "Return on Assets") (setf (slot-value QUANTITY1663 'SYNONYMS)  (list  'ROA)) (setf (slot-value QUANTITY1663 'IMPORTANCE)  'B) (setf (slot-value QUANTITY1663 'FORMULA)  (list  'EARNINGS '/ 'ASSETS)) (setf (slot-value QUANTITY1663 'STATUS)  "Active") (setf (slot-value QUANTITY1663 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY1663 'SYMBOL)  'QUANTITY1663) )(insert-item QUANTITY QUANTITY1663)(defvar QUANTITY669)(prog1 (setf QUANTITY669 (make-instance 'QUANTITY))(setf (slot-value QUANTITY669 'NAME)  "Revenue") (setf (slot-value QUANTITY669 'SYNONYMS)  (list  'REVENUES)) (setf (slot-value QUANTITY669 'IMPORTANCE)  'A) (setf (slot-value QUANTITY669 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY669 'FORMULA)  (list  'PRICE '* 'VOLUME)) (setf (slot-value QUANTITY669 'STATUS)  "Active") (setf (slot-value QUANTITY669 'DATE-OPEN) (list->date '(8 17 1994))) (setf (slot-value QUANTITY669 'SYMBOL)  'QUANTITY669) )(insert-item QUANTITY QUANTITY669)(defvar QUANTITY668)(prog1 (setf QUANTITY668 (make-instance 'QUANTITY))(setf (slot-value QUANTITY668 'NAME)  "Share Price") (setf (slot-value QUANTITY668 'SYNONYMS)  (list  'PPS 'SHARE-PRICE)) (setf (slot-value QUANTITY668 'IMPORTANCE)  'B) (setf (slot-value QUANTITY668 'NORM)  'HIGH) (setf (slot-value QUANTITY668 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY668 'STATUS)  "Active") (setf (slot-value QUANTITY668 'DATE-OPEN) (list->date '(8 18 1994))) (setf (slot-value QUANTITY668 'SYMBOL)  'QUANTITY668) )(insert-item QUANTITY QUANTITY668)(defvar QUANTITY101)(prog1 (setf QUANTITY101 (make-instance 'QUANTITY))(setf (slot-value QUANTITY101 'NAME)  "Short-term-debt") (setf (slot-value QUANTITY101 'IMPORTANCE)  'B) (setf (slot-value QUANTITY101 'NORM)  'LOW) (setf (slot-value QUANTITY101 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY101 'STATUS)  "Active") (setf (slot-value QUANTITY101 'DATE-OPEN) (list->date '(6 1 1996))) (setf (slot-value QUANTITY101 'SYMBOL)  'QUANTITY101) )(insert-item QUANTITY QUANTITY101)(defvar QUANTITY804)(prog1 (setf QUANTITY804 (make-instance 'QUANTITY))(setf (slot-value QUANTITY804 'NAME)  "Sodium") (setf (slot-value QUANTITY804 'IMPORTANCE)  'C) (setf (slot-value QUANTITY804 'NORM)  'LOW) (setf (slot-value QUANTITY804 'STATUS)  "Active") (setf (slot-value QUANTITY804 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY804 'SYMBOL)  'QUANTITY804) )(insert-item QUANTITY QUANTITY804)(defvar QUANTITY1114)(prog1 (setf QUANTITY1114 (make-instance 'QUANTITY))(setf (slot-value QUANTITY1114 'NAME)  "Standby Letters of Credit") (setf (slot-value QUANTITY1114 'SYNONYMS)  (list  'SLOC)) (setf (slot-value QUANTITY1114 'IMPORTANCE)  'C) (setf (slot-value QUANTITY1114 'NORM)  'HIGH) (setf (slot-value QUANTITY1114 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY1114 'STATUS)  "Active") (setf (slot-value QUANTITY1114 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY1114 'SYMBOL)  'QUANTITY1114) )(insert-item QUANTITY QUANTITY1114)(defvar QUANTITY1539)(prog1 (setf QUANTITY1539 (make-instance 'QUANTITY))(setf (slot-value QUANTITY1539 'NAME)  "Temperature") (setf (slot-value QUANTITY1539 'IMPORTANCE)  'C) (setf (slot-value QUANTITY1539 'NORM)  'HIGH) (setf (slot-value QUANTITY1539 'DIMENSION)  (list  'DEGREES)) (setf (slot-value QUANTITY1539 'STATUS)  "Active") (setf (slot-value QUANTITY1539 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY1539 'SYMBOL)  'QUANTITY1539) )(insert-item QUANTITY QUANTITY1539)(defvar QUANTITY644)(prog1 (setf QUANTITY644 (make-instance 'QUANTITY))(setf (slot-value QUANTITY644 'NAME)  "Volume") (setf (slot-value QUANTITY644 'IMPORTANCE)  'B) (setf (slot-value QUANTITY644 'NORM)  'HIGH) (setf (slot-value QUANTITY644 'STATUS)  "Active") (setf (slot-value QUANTITY644 'DATE-OPEN) (list->date '(8 17 1994))) (setf (slot-value QUANTITY644 'SYMBOL)  'QUANTITY644) )(insert-item QUANTITY QUANTITY644)(defvar QUANTITY854)(prog1 (setf QUANTITY854 (make-instance 'QUANTITY))(setf (slot-value QUANTITY854 'NAME)  "Weight") (setf (slot-value QUANTITY854 'IMPORTANCE)  'B) (setf (slot-value QUANTITY854 'NORM)  'LOW) (setf (slot-value QUANTITY854 'STATUS)  "Active") (setf (slot-value QUANTITY854 'DATE-OPEN) (list->date '(1 2 1995))) (setf (slot-value QUANTITY854 'SYMBOL)  'QUANTITY854) )(insert-item QUANTITY QUANTITY854)(defvar QUANTITY102)(prog1 (setf QUANTITY102 (make-instance 'QUANTITY))(setf (slot-value QUANTITY102 'NAME)  "long-term-debt") (setf (slot-value QUANTITY102 'IMPORTANCE)  'B) (setf (slot-value QUANTITY102 'NORM)  'HIGH) (setf (slot-value QUANTITY102 'DIMENSION)  (list  'DOLLARS)) (setf (slot-value QUANTITY102 'STATUS)  "Active") (setf (slot-value QUANTITY102 'DATE-OPEN) (list->date '(6 1 1996))) (setf (slot-value QUANTITY102 'SYMBOL)  'QUANTITY102) )(insert-item QUANTITY QUANTITY102)