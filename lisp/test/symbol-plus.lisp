(defmethod plus ((x symbol) (y symbol))  (let ((xx (symbol->integer x))        (yy (symbol->integer y)))    (integer->symbol (+ xx yy))))(defmethod plus ((x integer) (y integer))  (+ x y))(defun symbol->integer (s)  (case s    ((one) 1)    ((two) 2)    ((three) 3)    ((four) 4)    ((five) 5)    ((six) 6)    ((seven) 7)    ((eight) 8)    ((nine) 9)    ((ten) 10)    ))(defun integer->symbol (i)  (case i    ((1) 'one)    ((2) 'two)    ((3) 'three)    ((4) 'four)    ((5) 'five)    ((6) 'six)    ((7) 'seven)    ((8) 'eight)    ((9) 'nine)    ((10) 'ten)    ))