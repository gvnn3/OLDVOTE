--------------------------------------------------------------------Stuff to check in converting T to Common LISP--------------------------------------------------------------------(. vars) => (&rest vars)(collect/filter ... proc) => (collect/filter ... #'proc)(case ... (else ...))  =>  (case ... (otherwise ...))port => streamcopy-structure replaced by copy (generic function)replace tables with hash-tablesuse require/provide with load modules--------------------------------------------------------------------Open Problems:--------------------------------------------------------------------check each of the commands:AND                       selection conjunctionMOVE MV                   move current item to given dbUNDO U                    undo last commandDB                        update the Db fieldALIAS                     create a command synonym    << problem with undo--------------------------------------------------------------------To do--------------------------------------------------------------------create print-html--------------------------------------------------------------------Completed actions: --------------------------------------------------------------------8/3/96dm_cmds.lisp : Reset create date for .load files in data base.rm \verb| | for preferences and other data base objects  problem with my-pretty-print in mypp.lisp  needed to avoid read-string->list for objects.removed LaTex format codes from lots of files.  mypp group bill stance decision cg anal2 dd downside vp  issue member strategy relation strats protocol started adding HTML codes, e.g., print-hc should become print-htmlran vote-all.  It took 15 minutes, 45 seconds.issue: added synonym "regulation" for "government regulation"db_cmds.lisp : added reset-create-date to data file compilation8/1/96myload.lisp - recompiled to get reset-create-date and universal-date-to-string   load_qbc.lisp -- loads load_vote.lisp first.recompile qbc data files for psfldb_cmds2.lisp: commented out sort_command (use definition in sort.lisp)db.lisp:  commented out push-update (use definition in dd.lisp)load_qbc.lisp : changed load order of option and choose.lisp to avoid OPTION free variable6/16/96recompiled sources using MCL 3.9 for PowerPCproduced .pfsl files instead of .fasl files.need to declare free variables as special (e.g., Bill, issue, ...)8/21/94db/db_cmds.lisp : split_file : changed write to pprint to avoid extra long lines with no newlines.8/18/94db/dbs/record.lisp  -- changed default action from print-object to pretty-printutils/generics.lisp -- beefed up pretty-print7/12/94load_vote.lisp - made logigal pathname specific to MCLutils/allegro.lisp - added switch to remove complaint about MEMBER type	also added default method for print-objectload_utils.lisp - added compile-dbs command to compile all the datareadme - updated db/db.lisp  - added tdb as a synonym for dbaseinside_vote.ps  - added this appendix from thesis.utils/ionew.lisp - changed definition of EOF to avoid synchronizing headachesutils/run-time.lisp - changed ->hms-new to avoid negative index.To prepare tar file:- delete all .fasl files- delete all Mac resource directories and files, e.g. .HSResourses- db/data/*.load  edited to load only the main source file7/11/94created load_vote.lisp which handles both Mac and Allegro versionsedited pol/utils.lisp to fix <important? function.  did not properly handle equal case.turned off db-format flag began drafting README fileadded gen/test.lisp for testing generation codeadded utils/snd.lisp and vote_sounds to provide audio feedback for MCL version of VOTE.3/13/94ported VOTE to Allegro on Sun.edited update-file in db_cmds2.lisp to be compatible with Allegrochange merge-pathnames to (append-pathname ...)(defun append-pathname (path ext)  (pathname (format nil "~A.~A" (namestring path) ext)))defined function-name for allegro.lisp(really gross)3/12/94need to get rid of specials -- they have dynamic binding!created *utils-files* in load_utils.lispcreated *db-files* and *dbs-files* in load_db.lispcreated *pol-files* in load_pol.lispcreated *gen-files* in load_gen.lispadded my-load-filesadded my-compile-filesadded compile-everything3/11/94added copy method and all-the-slots for stances & relationsadded (symbol-function (strategy-protocol )) to apply-strats in cg.lisprecompiled protocol.lisp to include out-switch macroremoved id from table-index-fields in decision.lispedited record.lisp pretty-print so that default case uses print-objectfixed english-short for member.lispchanged structurep to record-p in (english  )  in english.lispfixed get-node in isa.lisp to handle spelling correction table lookupchanged pretty-print in generics.lisp to use pprint as default method3/10/94fixed cd command -- used (car args) instead of argssame for move commandfixed gen-np -- replaced bill-p / issue-p with is-issue?fixed problem with issue generation -- name conflict with issue database.may need to get rid of global references to databases.  replace with(*db-table* 'issue) ??changed strategy-test-code to functionsadded function method for print-readable3/8/94fixed problem with bill-name and bill-number missing from data (all-the-slots) wrong in bill.lispfixed pretty-print in issue.lispfixed insert-item so that index fields get inverted in hash table(db.lisp and tables.lisp)fixed object-hash (sxhash) had the same value for all record instancesmodified read-string->list (io.lisp) to convert commas to spaces added copy method for record instances (record.lisp)recompiled cg.lisp to get out-switch macro working3/6/94compiled member databasechange id to symbol in strategy table-index-fieldscompiled strategy databaseremoved district from init-polfixed sort for members: made stop-table executable, last returned pair, not atomfixed gethash arguments in use-pronoun? in context.lisp**problem with get-note, in isa.lisp -- can't access entries through db-table lookup3/5/94compiled run-time.lispadded it back into compile_commandmember data fileadded terpri to copy-part of split-file in db_cmds.lispneed to reload membernew and compileneed to load strategies3/4/94compiled output.lisp3/3/94fixed load_pol.lisp (removed loads from load_utils)** get (  test load_test) files *** in load-polstarted data file conversion on billnew  set -> setf  bill-status -> status  bill-symbol -> record-symbol  bill-date-open ->date-open  bill-remarks -> remarks  bill-keywords -> keywords  make-bill -> make-instance 'bill  make-note -> make-instance 'note  (block0 (lset -> (prog1 (defvar compiled bill databaseadded string-append to new_utils.lispchanged *split-file-size* from 30 to 60started groupnewcompiled group databasecompiled issue database3/2/94compiled vp.lisp3/1/94tried to get Allegro version runningcreated load_sun.lispinstalled allegro.lisp compatibility filechange %address-of to sxhash in object_hash.lispremoved extra *db-message* definition in io.lispremoved extra decision defvar in pol/specials.lispmoved (my-load utils "mcl-utils") to load_utils_pb/quadra filesremoved eval-when from ctime and dateadded all-the-slots to date and ctime? problem with member as type in allegro ? got rid of undefined.lisp from load_utils.lispadded specials.lisp to db added make-executable macroapplied make-executable to date-table + *db-table*changed copy-structure to copy in cg.lisp : initialize-decisioncompiled nouns.lispcompiled np.lispcompiled preamble.lispdo not use rand.cl -- use (random ) insteadadded function-synonym to macros.lispcompiled rels.lispadded instance-p to generics.lisp to replace T's structure?compiled verb.lispcompiled combine.lispcompiled downside.lispcompiled explain.lisp2/28/94compiled english.lispstarted on nouns.lisp2/27/94compiled clusters.lispcompiled context.lispadd gen specials.lispstarted on english.lisp2/26/94fixed load_db.lisp -- includes (load-dbs ...) function2/25/94compiled sort.lispcompiled strategy.lispcompiled strats.lispcompiled types.lispmoved from pol to gen:compiled  bill-english.lispfixed load_gen.lisp2/24/94 compiled protocol.lispcompiled remove.lispcompiled shift.lispstarted on sort.lisp2/22/94changed symbol to record-symbol in record.lisp et al.2/21/94compiled mem_anal.lispcompiled isa.lisp compiled operations.lispcompiled parse.lispcompiled party-strat.lisp2/20/94 compiled decision.lisp2/19/94compiled dd.lisp, but lots of undefined functionsstarted editing decision.lisp2/18/94worked on dd.lisp2/17/94added specials.lisp for declaimed global variablescompiled: anal2.lisp, anal3.lisp, analyse.lispconverted: cg.lisp, but lots of undefined functions2/15/94compiled: group.lisp1/4/94compiled: member.lispcompiled: relation.lispstarted editing: group.lisp1/1/94note.lisp and bill.lisp -- compiledadded (id) definition to record.lispadded undefined.lisp for functions not yet handlededited issue.lisp, stance.lisp -- compiledmypp.lisp -- ? do not need this function ?pol:utils.lisp -- compiled10/20/93started editing note.lispedited bill.lisp-- changed bill? to bill-pfix insert-item tables so that symbols get enterededited insert-item to create list entry in db-table, instead of atomicmodified init-db in db.lisp to set the filenames automaticallychanged compile_command to save machine independent file reference10/19/93HELP                        print help information    <<< fixed spacing copied .cl files for pol and gen to macsadded directory definitions for pol and gen10/2/93move pretty-print from task.lisp to record.lisp  OKmove symbol, subject, and remarks from task to record.  OK10/3/93HELP                        print help information    <<< check spacing??                         print command namesACTIVE UNDELETE UNDEL     change status to activeADD A                     add an itemCOMPLETED COMPLETE        flag current item as completedDELETE DEL                delete current itemPENDING PEND P            change status to pendingLOCK                      flag current item as locked  Note: unlock using status commandQUIT BYE Q                exit without saving current updatesREMARKS TEXT              update the Remarks fieldSTATUS ST                 update the Status fieldDATE-DUE DUE              update the Date-Due fieldDATE-CLOSED CLOSED        update the Date-Closed fieldDATE-OPEN OPEN            update the Date-Open fieldSUBJECT SUBJ              update the Subject fieldKEYWORDS KEYS             update the Keywords fieldAGENT                     update the Agent fieldCLIENT                    update the Client fieldAREA-CODE AC              print area code data  (fixed it up a little)DISPLAY DIS D             display current itemAPPEND APP                append to field  (changed caar to car)SYN INDEX                 create an index synonym  (changed a car and a push)TIME                      update the Time fieldHEADERS HEADER HEAD H LS  print item headersSHOW-UPDATES UPDATES      show updated itemsSORT                      sort itemsCOPY CP                   copy an entrydate.lispFixed weekdays to be numbered as in Common LISP, which was off by one from Zellertask.lispRemoved resources command.edited inorder? to handle empty task-time & date-due slotsspell.lispchanged string coercion to convert any non-string using ->stringtime.lispchanged military time to drop seconds -- used in print-headerrecord.lispdefined methods for pending? et al.10/4/93CDB CD                    change to parent/child dbMKDB                      make child db at current item10/5/93EDIT ED E                 edit a fieldfixed edit.lisp, changes to dm_cmds.lisp10/7/93task.lisp + load filesdefvar'd data pathname for data directorieschanged ctime-p to ctime? in print-hcdb_cmds2.lispprint command -- added :if-exists :supercede to open PRINT                     print current db to filePRINT-DATE                date of last printingEXPUNGE EXP               remove deleted itemsdefined print-readable in:generics.lisprecord.lispdate.lispSAVE S                    save current updates10/12/93added :if-exists to several opens in save/compileedited print-readable in generics.lispFixed the following by adding :stream keyword to write call; "db_cmds": Source is newer than object.  Recompiling.;Compiler warnings for "Macintosh HD: sbs:lisp:db:db_cmds.lisp" :;   Function call arguments don't match current definition of WRITE (2 references), in COPY-PART inside SPLIT_FILE.fixed the following in db_cmds2.lisp;Compiler warnings :;   Undefined function ITEM, in SAVE_UPDATE_ITEM.;   Undefined function SELECTOR-ID, in SAVE_UPDATE_ITEM.ionew.lispmade eof an interned symbol and fixed eof?10/13/93db_cmds2.lispchanged apply to funcall in save_update_itemfixed calls to push-updatectime.lispadded print-readable method for timeEXIT X                    save current updates and exitCOMPILE                   compile data fileCOMPILE-DATE              date of last compilationGET G                     get old dbremove areacodes (from db_cmds, db_cmds2, load_utils)converted *db-table* to hash-tableconverted spell.lisp to use hash-tablesconverted date.lisp to use hash-tablesfixed remove-item in db.lisp -- use maphash instead of my-table-walkunintern-synonyms in db_cmds2.lisp -- what to use? use table-unintern from tables.lispadded pretty-print method for hash-tables in generics.lisp