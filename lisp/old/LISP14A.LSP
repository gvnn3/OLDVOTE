(defmacro make-executable (item)  `(typecase ,item     (hash-table      (setf (symbol-function ',item)            #'(lambda (key) (gethash key ,item)))      (defun (setf ,item) (val key)         (setf (gethash key ,item) val))      ',item)     (array      (setf (symbol-function ',item)            #'(lambda (&rest indices) (apply #'aref ,item indices)))      (defun (setf ,item) (val &rest indices)        (setf (apply #'aref ,item indices) val))      ',item)     (T 'not-an-appropriate-type)))